# Generated by Django 5.1.1 on 2024-09-24 01:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level2gid', models.CharField(blank=True, max_length=15, null=True)),
                ('city_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_key', models.IntegerField(blank=True, null=True)),
                ('class_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'class_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('continent_name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'continent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level0gid', models.CharField(blank=True, max_length=5, null=True)),
                ('country_name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_key', models.IntegerField(blank=True, null=True)),
                ('family_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'family_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genus_key', models.IntegerField(blank=True, null=True)),
                ('genus_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'genus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_name', models.TextField()),
            ],
            options={
                'db_table': 'issue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kingdom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kingdom_key', models.IntegerField(blank=True, null=True)),
                ('kingdom_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'kingdom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Localization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localization_name', models.CharField(max_length=255)),
                ('decimal_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('decimal_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'localization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=50)),
                ('user_name', models.CharField(max_length=50)),
                ('event_description', models.TextField()),
                ('dataset_key', models.TextField()),
                ('protocol', models.CharField(max_length=20)),
                ('event_date', models.DateTimeField()),
                ('last_parsed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberOf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('researcher_role', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'member_of',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_key', models.IntegerField(blank=True, null=True)),
                ('order_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'order_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Phylum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phylum_key', models.IntegerField(blank=True, null=True)),
                ('phylum_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'phylum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('gbifid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('collection_code', models.CharField(max_length=30)),
                ('ocurrenceid', models.CharField(max_length=30, unique=True)),
                ('basis_of_record', models.CharField(blank=True, max_length=30, null=True)),
                ('ocurrence_status', models.CharField(blank=True, max_length=15, null=True)),
                ('preparations', models.CharField(blank=True, max_length=15, null=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('event_remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'research',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('surname', models.CharField(max_length=80)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, max_length=11, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'researcher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('description', models.TextField()),
                ('institution', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'research_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license', models.CharField(max_length=15)),
                ('access_rights', models.CharField(max_length=100)),
                ('rights_holder', models.CharField(max_length=50)),
                ('institution_code', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'rights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_key', models.IntegerField(blank=True, null=True)),
                ('species_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level1gid', models.CharField(blank=True, max_length=15, null=True)),
                ('state_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'state_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxon_key', models.BigIntegerField(blank=True, null=True)),
                ('scientific_name', models.CharField(max_length=80)),
                ('generic_name', models.CharField(blank=True, max_length=40, null=True)),
                ('specific_epithet', models.CharField(blank=True, max_length=20, null=True)),
                ('infraespecific_epithet', models.CharField(blank=True, max_length=20, null=True)),
                ('taxon_rank', models.CharField(max_length=12)),
                ('taxonomic_status', models.CharField(blank=True, max_length=12, null=True)),
                ('iucn_redlist_category', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'taxon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxonHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'taxon_hierarchy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxonSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verbatim_scientific_name', models.CharField(blank=True, max_length=60, null=True)),
                ('repatriated', models.BooleanField()),
                ('type_status', models.CharField(blank=True, max_length=12, null=True)),
            ],
            options={
                'db_table': 'taxon_sample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchedBy',
            fields=[
                ('gbifid', models.OneToOneField(db_column='gbifid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CadmusApp.research')),
            ],
            options={
                'db_table': 'researched_by',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchIssue',
            fields=[
                ('gbifid', models.OneToOneField(db_column='gbifid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='CadmusApp.research')),
            ],
            options={
                'db_table': 'research_issue',
                'managed': False,
            },
        ),
    ]
